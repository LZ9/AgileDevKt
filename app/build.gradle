apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'koin'

android {
    compileSdkVersion 31
    buildToolsVersion "31.0.0"
    defaultConfig {
        applicationId "com.lodz.android.agiledevkt"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        multiDexEnabled = true// 启用dex分包
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//        ndk {
//            abiFilters "armeabi"
//        }
    }

    viewBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    //日志开关
    def LOG_DEBUG = "LOG_DEBUG"
    defaultConfig {
        buildConfigField "boolean", LOG_DEBUG, "true"
    }

    // 程序在编译的时候会检查lint，有任何错误提示会停止build，我们可以关闭这个开关
    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

    buildTypes {

        debug {//debug版本的配置
            minifyEnabled false // 是否进行混淆
            zipAlignEnabled false // 是否支持zip
            debuggable true // 是否支持调试
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            buildConfigField "boolean", LOG_DEBUG, "false"
            minifyEnabled false // 是否进行混淆
            zipAlignEnabled true // 是否支持zip
            debuggable false // 是否支持调试
            jniDebuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def newName
            if (variant.baseName.endsWith('release')) {
                def formattedDate = new Date().format('yyyyMMddHHmm')
                newName = "AgileDevKt-v" + defaultConfig.versionName + "-" + variant.baseName + "-" + formattedDate + ".apk"
            } else {
                newName = "AgileDevKt-v" + defaultConfig.versionName + "-" + variant.baseName + ".apk"
            }
            outputFileName = newName
        }
    }
}

dependencies {
    implementation project(':pandora')
    implementation project(':imageloaderkt')
    //    implementation 'com.lodz:imageloader-kt:1.0.4'
    // 权限申请
    implementation "com.github.permissions-dispatcher:ktx:1.1.2"

    // anko layout
//    implementation 'org.jetbrains.anko:anko-sdk25:0.10.8'
//    implementation 'org.jetbrains.anko:anko-appcompat-v7:0.10.8'

    // 腾讯定位SDK
    implementation files('libs/TencentLocationSdk_v7.1.4.3_r4aa8ac63_20180911_165428.jar')
    // 高德定位SDK
    implementation 'com.amap.api:location:4.7.0'

    // 大图加载缩放
    implementation 'com.davemorrissey.labs:subsampling-scale-image-view:3.10.0'
    // PhotoView
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    // 滚动选择
//    implementation 'com.contrarywind:Android-PickerView:4.1.9'
    implementation files('libs/Android-PickerView-4.1.9.aar')
    implementation files('libs/wheelview-4.1.0.aar')

    //添加RxDownload4的所有依赖
    implementation "com.github.ssseasonnn:RxDownload:1.1.3"

    // okio
    implementation 'com.squareup.okio:okio:3.0.0'

    // 单元测试
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // jsbridge
    implementation 'ink.lodz:jsbridge-kt:1.0.4'

    implementation 'org.aspectj:aspectjrt:1.9.7'

}

import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

final def log = project.logger
final def variants = project.android.applicationVariants
variants.all { variant ->
    variant.outputs.all { output ->
        outputFileName = "AgileDevKt" + "_${variant.name}_V${variant.versionName}.apk"

        def fullName = ""
        output.name.tokenize('-').eachWithIndex { token, index ->
            fullName = fullName + (index == 0 ? token : token.capitalize())
        }

        JavaCompile javaCompile = variant.javaCompileProvider.get()
        javaCompile.doLast {
            String[] javaArgs = ["-showWeaveInfo",
                                 "-1.8",
                                 "-inpath", javaCompile.destinationDir.toString(),
                                 "-aspectpath", javaCompile.classpath.asPath,
                                 "-d", javaCompile.destinationDir.toString(),
                                 "-classpath", javaCompile.classpath.asPath,
                                 "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
            log.debug "ajc javaArgs: " + Arrays.toString(javaArgs)
            String[] kotlinArgs = ["-showWeaveInfo",
                                   "-1.8",
                                   "-inpath", project.buildDir.path + "/tmp/kotlin-classes/" + fullName,
                                   "-aspectpath", javaCompile.classpath.asPath,
                                   "-d", project.buildDir.path + "/tmp/kotlin-classes/" + fullName,
                                   "-classpath", javaCompile.classpath.asPath,
                                   "-bootclasspath", project.android.bootClasspath.join(
                    File.pathSeparator)]
            log.debug "ajc kotlinArgs: " + Arrays.toString(kotlinArgs)

            MessageHandler handler = new MessageHandler(true)
            new Main().run(javaArgs, handler)
            new Main().run(kotlinArgs, handler)
            for (IMessage message : handler.getMessages(null, true)) {
                switch (message.getKind()) {
                    case IMessage.ABORT:
                    case IMessage.ERROR:
                    case IMessage.FAIL:
                        log.error message.message, message.thrown
                        break
                    case IMessage.WARNING:
                        log.warn message.message, message.thrown
                        break
                    case IMessage.INFO:
                        log.info message.message, message.thrown
                        break
                    case IMessage.DEBUG:
                        log.debug message.message, message.thrown
                        break
                }
            }
        }
    }
}
