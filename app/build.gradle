apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'koin'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    defaultConfig {
        applicationId "com.lodz.android.agiledevkt"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled = true// 启用dex分包
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//        ndk {
//            abiFilters "armeabi"
//        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    //日志开关
    def LOG_DEBUG = "LOG_DEBUG"
    defaultConfig {
        buildConfigField "boolean", LOG_DEBUG, "true"
    }

    // 程序在编译的时候会检查lint，有任何错误提示会停止build，我们可以关闭这个开关
    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

    buildTypes {

        debug {//debug版本的配置
            minifyEnabled false // 是否进行混淆
            zipAlignEnabled false // 是否支持zip
            debuggable true // 是否支持调试
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            buildConfigField "boolean", LOG_DEBUG, "false"
            minifyEnabled false // 是否进行混淆
            zipAlignEnabled true // 是否支持zip
            debuggable false // 是否支持调试
            jniDebuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def newName
            if (variant.baseName.endsWith('release')) {
                def formattedDate = new Date().format('yyyyMMddHHmm')
                newName = "AgileDevKt-v" + defaultConfig.versionName + "-" + variant.baseName + "-" + formattedDate + ".apk"
            } else {
                newName = "AgileDevKt-v" + defaultConfig.versionName + "-" + variant.baseName + ".apk"
            }
            outputFileName = newName
        }
    }
}

dependencies {
    implementation project(':pandora')
    implementation project(':imageloaderkt')
    //    implementation 'com.lodz:imageloader-kt:1.0.4'
    // 权限申请
    implementation 'org.permissionsdispatcher:permissionsdispatcher:4.8.0'
    kapt 'org.permissionsdispatcher:permissionsdispatcher-processor:4.8.0'
    // anko layout
    implementation 'org.jetbrains.anko:anko-sdk25:0.10.8'
    implementation 'org.jetbrains.anko:anko-appcompat-v7:0.10.8'

    // 腾讯定位SDK
    implementation files('libs/TencentLocationSdk_v7.1.4.3_r4aa8ac63_20180911_165428.jar')
    // 高德定位SDK
    implementation 'com.amap.api:location:4.7.0'

    // 大图加载缩放
    implementation 'com.davemorrissey.labs:subsampling-scale-image-view:3.10.0'
    // PhotoView
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    // 滚动选择
    implementation 'com.contrarywind:Android-PickerView:4.1.9'

    //添加RxDownload4的所有依赖
    implementation "com.github.ssseasonnn:RxDownload:1.1.2"

    // Koin
    implementation "org.koin:koin-android:2.2.1"
    implementation "org.koin:koin-androidx-scope:2.2.0"
    implementation "org.koin:koin-androidx-viewmodel:2.2.0"
    implementation "org.koin:koin-androidx-fragment:2.2.0"
    implementation "org.koin:koin-androidx-workmanager:2.2.0"
    implementation "org.koin:koin-androidx-compose:2.2.0"
    implementation "org.koin:koin-androidx-ext:2.2.0"

    // okio
    implementation 'com.squareup.okio:okio:2.10.0'

    // 单元测试
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'


}
